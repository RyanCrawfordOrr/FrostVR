/* Copyright (C) Siqi.Wu - All Rights Reserved
* Written by Siqi.Wu<lion547016@gmail.com>, Jan 2023
*/

#pragma once

#include "CoreMinimal.h"
#include "Components/ActorComponent.h"
#include "UObject/NoExportTypes.h"
#include "Components/SynthComponent.h"
#include "Sound/SoundGenerator.h"
#include "AudioResampler.h"
#include "Sound/SoundWaveProcedural.h"

#include "EmbeddedVoiceChatChannel.h"

#include "EmbeddedVoiceChatAudioComponent.generated.h"

class UEmbeddedVoiceChatGroup;

UCLASS(BlueprintType)
class EMBEDDEDVOICECHAT_API UVoiceChatSoundWave : public USoundWaveProcedural
{
	GENERATED_BODY()

public:
	void Init(UEmbeddedVoiceChatGroup *group);

	/** Begin USoundWave */
	virtual int32 OnGeneratePCMAudio(TArray<uint8>& OutAudio, int32 NumSamples) override;
	virtual Audio::EAudioMixerStreamDataFormat::Type GetGeneratedPCMDataFormat() const override;
	/** End USoundWave */

protected:

public:
	/** A volume multiplier to apply to sounds generated by this component */
	UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Sound, meta = (DisplayAfter = "Sound"))
	float VolumeMultiplier = 1.0f;

	UPROPERTY()
	TWeakObjectPtr<UEmbeddedVoiceChatGroup> group = nullptr;
};

// Class which can play the audio of a group
UCLASS(BlueprintType, meta = (BlueprintSpawnableComponent))
class EMBEDDEDVOICECHAT_API UEmbeddedVoiceChatAudioComponent : public USynthComponent {
    GENERATED_BODY()

public:
    /** A volume multiplier to apply to sounds generated by this component */
    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Sound, meta = (DisplayAfter = "Sound"))
    float VolumeMultiplier = 1.0f;

    UEmbeddedVoiceChatAudioComponent(const FObjectInitializer& ObjectInitializer);

    int32 OnGenerateAudio(float* OutAudio, int32 NumSamples) override;

    virtual bool Init(int32& SampleRate) override;

    void setGroup(UEmbeddedVoiceChatGroup *group);

	UPROPERTY()
	TWeakObjectPtr<UEmbeddedVoiceChatGroup> group = nullptr;
};
